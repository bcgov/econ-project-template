# This is a basic workflow that is manually triggered

name: Workflow - Run manual trigger

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: Send greeting
      run: echo "Hello ${{ inputs.name }}"

      env:
  CLUSTER: https://api.silver.devops.gov.bc.ca:6443
  AUTH_TOKEN: ${{ secrets.OPENSHIFT_TOKEN_DEV }}
  TARGET_PROJECT: ${{ vars.PROJECT_NAMESPACE }}
  TARGET_ENV: ${{ vars.NAME }} 
  ART_REPO_USER: ${{ secrets.ARTIFACTORY_USER_DEV }}
  ART_REPO_TOKEN: ${{ secrets.ARTIFACTORY_TOKEN_DEV }}

  build:

    runs-on: ubuntu-latest
    environment: dev
    steps:
    - uses: actions/checkout@v4
    - name: Build application Docker images
      run: docker compose build
      working-directory: ./applications/dotnetapp
    - name: Connect to JFrog Artifactory
      run: |
        docker login --username $ART_REPO_USER --password $ART_REPO_TOKEN artifacts.developer.gov.bc.ca
    - name: Push application images to Artifactory container registry
      run:  | 
        docker tag dotnetapp image-registry.apps.silver.devops.gov.bc.ca/$TARGET_PROJECT-$TARGET_ENV/dotnetapp:github-latest
        docker push image-registry.apps.silver.devops.gov.bc.ca/$TARGET_PROJECT-$TARGET_ENV/dotnetapp:github-latest
    - name: Connect to OpenShift API
      run: |
        # oc login --token=$AUTH_TOKEN --server=$CLUSTER
        # oc project $TARGET_PROJECT-$TARGET_ENV
        # oc registry login
    - name: Push application images to OpenShift container registry
      run:  | 
        # docker tag dotnetapp image-registry.apps.silver.devops.gov.bc.ca/$TARGET_PROJECT-$TARGET_ENV/dotnetapp:github-latest
        # docker push image-registry.apps.silver.devops.gov.bc.ca/$TARGET_PROJECT-$TARGET_ENV/dotnetapp:github-latest
      
      
